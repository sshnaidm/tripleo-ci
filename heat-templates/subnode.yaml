# This template was originally written by Jodie Miu as part of her work in
# Red Hat [1]
#
# [1] https://github.com/resurrexit/subnode-heat-template
#
heat_template_version:  2016-10-14

description: Template to deploy a subnode server.

parameters:

  DNSNameserver:
    default: "8.8.8.8"
    description: The DNS server for subnode will use to install packages.
    type: string
    hidden: false

  Hostname:
    default: subnode.localdomain
    description: The hostname for the subnode instance.
    type: string


resources:
  subnode_install:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: DNSNameserver
      - name: Hostname
      - name: subnodeIP
      outputs:
      - name: result
      config: |
        #!/bin/bash
        set -eux
        # Prepare hostname
        sudo hostnamectl set-hostname --static $Hostname
        echo $subnodeIP `hostname` | sudo tee -a /etc/hosts
        # Set iptables rules
        cat << EOF > subnode-iptables-rules.txt
        # Firewall configuration written by system-config-firewall
        # Manual customization of this file is not recommended.
        *filter
        :INPUT ACCEPT [0:0]
        :FORWARD ACCEPT [0:0]
        :OUTPUT ACCEPT [0:0]
        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
        -A INPUT -p icmp -j ACCEPT
        -A INPUT -i lo -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
        #TCP ports for subnode
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 443  -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 389 -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 636 -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 88  -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 464  -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 53  -j ACCEPT
        #UDP ports for subnode
        -A INPUT -m state --state NEW -m udp -p udp --dport 88 -j ACCEPT
        -A INPUT -m state --state NEW -m udp -p udp --dport 464 -j ACCEPT
        -A INPUT -m state --state NEW -m udp -p udp --dport 123 -j ACCEPT
        -A INPUT -m state --state NEW -m udp -p udp --dport 53 -j ACCEPT
        -A INPUT -j REJECT --reject-with icmp-host-prohibited
        -A FORWARD -j REJECT --reject-with icmp-host-prohibited
        COMMIT
        EOF
        sudo iptables-restore < subnode-iptables-rules.txt
        # Set DNS servers
        sudo echo "nameserver $DNSNameserver" >> /etc/resolv.conf
        sudo echo "nameserver 8.8.4.4" >> /etc/resolv.conf
        # Install jenkins user
        sudo useradd jenkins
        # Install the needed packages
        sudo mkdir -p /opt/stack/new
        sudo chown jenkins:jenkins-R /opt/stack/new
        cd /opt/stack/new
        sudo -u jenkins git clone https://github.com/openstack-infra/tripleo-ci

  subnode_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: subnode_install
      server:
        get_resource: subnode_instance
      input_values:
        DNSNameserver: {get_param: DNSNameserver}
        Hostname: {get_param: Hostname}
        subnodeIP: {get_attr: [subnode_instance, networks, ctlplane, 0]}

  subnode_instance:
    type: OS::Nova::Server
    properties:
      key_name: default
      image: overcloud-full
      flavor: baremetal
      name: identity-base
      networks:
        - network: ctlplane
      user_data_format: SOFTWARE_CONFIG

outputs:
  result:
    value:
      get_attr: [subnode_deployment, result]
  ipa_ip:
    value:
      get_attr: [subnode_instance, networks, ctlplane, 0]
  stdout:
    value:
      get_attr: [subnode_deployment, deploy_stdout]
  stderr:
    value:
      get_attr: [subnode_deployment, deploy_stderr]
  status_code:
    value:
      get_attr: [subnode_deployment, deploy_status_code]