---
- name: Add the undercloud node to the generated inventory
  hosts: localhost
  gather_facts: yes
  tags:
    - undercloud-scripts
  roles:
    - tripleo-inventory

- name: Local setup for quickstart
  hosts: undercloud
  connection: local
  tasks:
    - name: Host setup
      shell: >
        sudo hostnamectl set-hostname undercloud;
        echo 'undercloud' | sudo dd of=/etc/hostname;
        echo "127.0.0.1 $(hostname) $(hostname).openstacklocal" | sudo tee -a /etc/hosts;
        echo "127.0.0.2 undercloud undercloud.openstacklocal" | sudo tee -a /etc/hosts;
        if [ ! -e ${HOME}/.ssh/id_rsa.pub ] ; then
            if [[ -e ${HOME}/.ssh/id_rsa ]]; then
                ssh-keygen -y -f ${HOME}/.ssh/id_rsa > ${HOME}/.ssh/id_rsa.pub;
            else
                ssh-keygen -N "" -f ${HOME}/.ssh/id_rsa;
            fi
        fi;
        cat ~/.ssh/id_rsa.pub | sudo tee -a /root/.ssh/authorized_keys | tee -a ~/.ssh/authorized_keys;

        sudo yum remove -y puppet hiera puppetlabs-release rdo-release;
        sudo rm -rf /etc/puppet /etc/hiera.yaml;
        sudo cp {{tripleo_root}}/tripleo-ci/test-environments/overcloud-cacert.pem /etc/pki/ca-trust/source/anchors/;
        sudo update-ca-trust extract;
        cp -f {{ lookup('env', 'TE_DATAFILE') }} ~/instackenv.json;
  tags:
    - local

- name: Run DLRN gate role and create repo
  hosts: undercloud
  vars:
    artg_compressed_gating_repo: "/home/jenkins/gating_repo.tar.gz"
    ansible_user: jenkins
    ansible_user_dir: /home/jenkins/
    artg_repos_dir: "{{ tripleo_root}}"
  roles:
    - build-test-packages

- name: Get images for quickstart
  hosts: undercloud
  gather_facts: no
  tasks:
    - name: Prepare images
      shell: >
        source {{tripleo_root}}/tripleo-ci/scripts/common_functions.sh;
        prepare_images_oooq
      when: "not '{{ lookup('env', 'STABLE_RELEASE') }}'"

- name: Install built repos
  hosts: undercloud
  vars:

  roles:
    - build-test-packages

# Deploy the undercloud
- name:  Install undercloud
  hosts: undercloud
  gather_facts: no
  roles:
    - undercloud-deploy



- include: post-undercloud-playbook.yml
  tags:
    - post-undercloud

- include: get_images-playbook.yml
  tags:
    - image-build

- name:  Prepare configuration files for the overcloud deployment
  hosts: undercloud
  gather_facts: no
  roles:
    - overcloud-prep-config

- name:  Perpare the baremetal overcloud
  hosts: undercloud
  gather_facts: no
  roles:
    - baremetal-prep-overcloud

# Prepare the overcloud for a containerized deployment
- name:  Prepare overcloud containers
  hosts: undercloud
  gather_facts: no
  roles:
    - { role: overcloud-prep-containers, when: containerized_overcloud|default(false) }

# Prepare the overcloud images for deployment
- name:  Prepare the overcloud images for deployment
  hosts: undercloud
  gather_facts: no
  roles:
    - overcloud-prep-images

- name:  Remove big image
  hosts: undercloud
  gather_facts: no
  tasks:
    - name: Remove overcloud-full.qcow2
      file: path=~/overcloud-full.qcow2 state=absent

# Prepare the undercloud networks for the overcloud deployment
- name:  Prepare the undercloud networks for the overcloud deployment
  hosts: undercloud
  gather_facts: no
  roles:
    - overcloud-prep-network

- name: Prepare the SSL Configuration for the overcloud deployment
  hosts: undercloud
  gather_facts: no
  roles:
    - { role: overcloud-ssl, when: ssl_overcloud|bool }

# Deploy the overcloud
- name:  Deploy the overcloud
  hosts: undercloud
  gather_facts: yes
  roles:
    - overcloud-deploy

- name: Add the overcloud nodes to the generated inventory
  hosts: undercloud
  gather_facts: yes
  tags:
    - overcloud-deploy
  vars:
      inventory: all
  roles:
    - tripleo-inventory

# Check the results of the deployment, note after inventory has executed
- name:  Check the result of the deployment
  hosts: localhost
  tags:
    - overcloud-deploy
  tasks:
    - name: ensure the deployment result has been read into memory
      include_vars: "{{ local_working_dir }}/overcloud_deployment_result.json"

    # overcloud_deploy_result = ["failed", "passed"]
    - name: did the deployment pass or fail?
      debug: var=overcloud_deploy_result
      failed_when: overcloud_deploy_result == "failed"

# Validate the deployment
- name:  validate the overcloud
  hosts: undercloud
  tags:
    - overcloud-validate
  gather_facts: no
  roles:
    - { role: validate-simple, when: test_ping|bool }

# Execute tempest against the overcloud deployment
- name:  Execute tempest against the overcloud
  hosts: undercloud
  tags:
    - overcloud-validate
  gather_facts: no
  roles:
    - { role: validate-tempest, when: run_tempest|bool }